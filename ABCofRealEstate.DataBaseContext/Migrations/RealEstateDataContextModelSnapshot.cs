// <auto-generated />
using System;
using ABCofRealEstate.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ABCofRealEstate.DataBaseContext.Migrations
{
    [DbContext(typeof(RealEstateDataContext))]
    partial class RealEstateDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Apartment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ConditionHouse")
                        .HasColumnType("integer");

                    b.Property<short>("CountBalcony")
                        .HasColumnType("smallint");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<decimal>("KitchenArea")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LivingSpace")
                        .HasColumnType("numeric");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartment")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<short>("NumberApartment")
                        .HasColumnType("smallint");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalArea")
                        .HasColumnType("numeric");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId")
                        .IsUnique();

                    b.ToTable("apartment");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<int>("LandArea")
                        .HasColumnType("integer");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId")
                        .IsUnique();

                    b.ToTable("area");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Comertion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartment")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<decimal>("RoomArea")
                        .HasColumnType("numeric");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId")
                        .IsUnique();

                    b.ToTable("comertion");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Garage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<short>("GarageCapacity")
                        .HasColumnType("smallint");

                    b.Property<bool>("HaveBasement")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId")
                        .IsUnique();

                    b.ToTable("garage");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Hostel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ConditionHouse")
                        .HasColumnType("integer");

                    b.Property<short>("CountBalcony")
                        .HasColumnType("smallint");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<decimal>("KitchenArea")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LivingSpace")
                        .HasColumnType("numeric");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartment")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<short>("NumberApartment")
                        .HasColumnType("smallint");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalArea")
                        .HasColumnType("numeric");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId")
                        .IsUnique();

                    b.ToTable("hostel");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Area")
                        .HasColumnType("numeric");

                    b.Property<int?>("ConditionHouse")
                        .HasColumnType("integer");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("GardenSot")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<decimal>("KitchenArea")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LivingSpace")
                        .HasColumnType("numeric");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartment")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalArea")
                        .HasColumnType("numeric");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId")
                        .IsUnique();

                    b.ToTable("house");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Moderator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSuperModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("moderator");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80ec665e-5300-468a-b395-7be86ee70008"),
                            Email = "oleg.olegov@gmail.com",
                            IsSuperModerator = true,
                            Name = "Oleg",
                            Password = "DAAAD6E5604E8E17BD9F108D91E26AFE6281DAC8FDA0091040A7A6D7BD9B43B5"
                        });
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ConditionHouse")
                        .HasColumnType("integer");

                    b.Property<short>("CountBalcony")
                        .HasColumnType("smallint");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<decimal>("KitchenArea")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("LivingSpace")
                        .HasColumnType("numeric");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartment")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<short>("NumberApartment")
                        .HasColumnType("smallint");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalArea")
                        .HasColumnType("numeric");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId")
                        .IsUnique();

                    b.ToTable("room");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.SourceRealEstateObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameObject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("source_real_estate_object");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Apartment", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithOne("Apartment")
                        .HasForeignKey("ABCofRealEstate.Data.Models.Apartment", "SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Area", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithOne("Area")
                        .HasForeignKey("ABCofRealEstate.Data.Models.Area", "SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Comertion", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithOne("Comertion")
                        .HasForeignKey("ABCofRealEstate.Data.Models.Comertion", "SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Garage", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithOne("Garage")
                        .HasForeignKey("ABCofRealEstate.Data.Models.Garage", "SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Hostel", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithOne("Hostel")
                        .HasForeignKey("ABCofRealEstate.Data.Models.Hostel", "SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.House", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithOne("House")
                        .HasForeignKey("ABCofRealEstate.Data.Models.House", "SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Room", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithOne("Room")
                        .HasForeignKey("ABCofRealEstate.Data.Models.Room", "SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.SourceRealEstateObject", b =>
                {
                    b.Navigation("Apartment");

                    b.Navigation("Area");

                    b.Navigation("Comertion");

                    b.Navigation("Garage");

                    b.Navigation("Hostel");

                    b.Navigation("House");

                    b.Navigation("Room");
                });
#pragma warning restore 612, 618
        }
    }
}
