// <auto-generated />
using System;
using ABCofRealEstate.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ABCofRealEstate.DataBaseContext.Migrations
{
    [DbContext(typeof(RealEstateDataContext))]
    partial class RealEstateDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Apartament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ConditionHouse")
                        .HasColumnType("integer");

                    b.Property<short>("CountBalcony")
                        .HasColumnType("smallint");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<double>("KitchenArea")
                        .HasColumnType("double precision");

                    b.Property<double>("LivingSpace")
                        .HasColumnType("double precision");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartament")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<short>("NumberApartament")
                        .HasColumnType("smallint");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<double>("TotalArea")
                        .HasColumnType("double precision");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId");

                    b.ToTable("apartament");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<int>("LandArea")
                        .HasColumnType("integer");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<int>("TypeSale")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId");

                    b.ToTable("area");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Commertion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartament")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<double>("RoomArea")
                        .HasColumnType("double precision");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId");

                    b.ToTable("commertion");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("employee");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Garage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<int>("TypeSale")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId");

                    b.ToTable("garage");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Hostel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ConditionHouse")
                        .HasColumnType("integer");

                    b.Property<short>("CountBalcony")
                        .HasColumnType("smallint");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<double>("KitchenArea")
                        .HasColumnType("double precision");

                    b.Property<double>("LivingSpace")
                        .HasColumnType("double precision");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartament")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<short>("NumberApartament")
                        .HasColumnType("smallint");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<double>("TotalArea")
                        .HasColumnType("double precision");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId");

                    b.ToTable("hostel");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<double>("Area")
                        .HasColumnType("double precision");

                    b.Property<int?>("ConditionHouse")
                        .HasColumnType("integer");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<double>("GardenSot")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<double>("KitchenArea")
                        .HasColumnType("double precision");

                    b.Property<double>("LivingSpace")
                        .HasColumnType("double precision");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartament")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<double>("TotalArea")
                        .HasColumnType("double precision");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId");

                    b.ToTable("house");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Moderator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("AccessLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSuperModerator")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("moderator");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ConditionHouse")
                        .HasColumnType("integer");

                    b.Property<short>("CountBalcony")
                        .HasColumnType("smallint");

                    b.Property<short>("CountFloorsHouse")
                        .HasColumnType("smallint");

                    b.Property<short>("CountRooms")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("DateTimePublished")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActual")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("boolean");

                    b.Property<double>("KitchenArea")
                        .HasColumnType("double precision");

                    b.Property<double>("LivingSpace")
                        .HasColumnType("double precision");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("LocatedFloorApartament")
                        .HasColumnType("smallint");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("integer");

                    b.Property<short>("NumberApartament")
                        .HasColumnType("smallint");

                    b.Property<string>("NumberProperty")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<Guid>("SourceRealEstateObjectId")
                        .HasColumnType("uuid");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.Property<double>("TotalArea")
                        .HasColumnType("double precision");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("SourceRealEstateObjectId");

                    b.ToTable("room");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.SourceRealEstateObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("NameObject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("source_real_estate_object");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Apartament", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithMany()
                        .HasForeignKey("SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Area", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithMany()
                        .HasForeignKey("SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Commertion", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithMany()
                        .HasForeignKey("SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Garage", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithMany()
                        .HasForeignKey("SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Hostel", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithMany()
                        .HasForeignKey("SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.House", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithMany()
                        .HasForeignKey("SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Room", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ABCofRealEstate.Data.Models.SourceRealEstateObject", "SourceRealEstateObject")
                        .WithMany()
                        .HasForeignKey("SourceRealEstateObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SourceRealEstateObject");
                });
#pragma warning restore 612, 618
        }
    }
}
