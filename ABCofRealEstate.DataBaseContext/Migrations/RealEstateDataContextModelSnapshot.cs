// <auto-generated />
using System;
using ABCofRealEstate.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ABCofRealEstate.DataBaseContext.Migrations
{
    [DbContext(typeof(RealEstateDataContext))]
    partial class RealEstateDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Apartament", b =>
                {
                    b.Property<int>("IdApartament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdApartament"));

                    b.Property<string>("ConditionHouse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountBalcony")
                        .HasColumnType("int");

                    b.Property<int>("CountFloorsHouse")
                        .HasColumnType("int");

                    b.Property<int>("CountRooms")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeIDEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("bit");

                    b.Property<int>("KitchenArea")
                        .HasColumnType("int");

                    b.Property<int>("LivingSpace")
                        .HasColumnType("int");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocatedFloorApartament")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("int");

                    b.Property<string>("NumberHouse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalArea")
                        .HasColumnType("int");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLImgs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdApartament");

                    b.HasIndex("EmployeeIDEmployee");

                    b.ToTable("Apartament");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Area", b =>
                {
                    b.Property<int>("IdArea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdArea"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeIDEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<int>("LandArea")
                        .HasColumnType("int");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLImgs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdArea");

                    b.HasIndex("EmployeeIDEmployee");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Commertion", b =>
                {
                    b.Property<int>("IdCommertion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCommertion"));

                    b.Property<int>("CountFloorsHouse")
                        .HasColumnType("int");

                    b.Property<int>("CountRooms")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeIDEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("bit");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocatedFloorApartament")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("RoomArea")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLImgs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCommertion");

                    b.HasIndex("EmployeeIDEmployee");

                    b.ToTable("Commertion");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Employee", b =>
                {
                    b.Property<int>("IDEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDEmployee"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDEmployee");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Garage", b =>
                {
                    b.Property<int>("IdGarage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGarage"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeIDEmployee")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLImgs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGarage");

                    b.HasIndex("EmployeeIDEmployee");

                    b.ToTable("Garage");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.House", b =>
                {
                    b.Property<int>("IdHouse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHouse"));

                    b.Property<int>("Area")
                        .HasColumnType("int");

                    b.Property<int?>("ConditionHouse")
                        .HasColumnType("int");

                    b.Property<int>("CountFloorsHouse")
                        .HasColumnType("int");

                    b.Property<int>("CountRooms")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeIDEmployee")
                        .HasColumnType("int");

                    b.Property<int>("GardenSot")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorner")
                        .HasColumnType("bit");

                    b.Property<int>("KitchenArea")
                        .HasColumnType("int");

                    b.Property<int>("LivingSpace")
                        .HasColumnType("int");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocatedFloorApartament")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialHouse")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalArea")
                        .HasColumnType("int");

                    b.Property<string>("TypeSale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLImgs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdHouse");

                    b.HasIndex("EmployeeIDEmployee");

                    b.ToTable("House");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Apartament", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Area", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Commertion", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.Garage", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("ABCofRealEstate.Data.Models.House", b =>
                {
                    b.HasOne("ABCofRealEstate.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeIDEmployee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
